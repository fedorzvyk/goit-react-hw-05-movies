{"version":3,"file":"static/js/691.51313e4f.chunk.js","mappings":"0NAGaA,EAASC,EAAAA,GAAAA,IAAH,mQAWNC,EAAQD,EAAAA,GAAAA,GAAH,2C,SCJLE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,QAAS,EAAGC,SAAS,OAAzC,SACGN,EAAOO,KAAI,gBAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,MAAnB,OACV,SAACd,EAAD,WACE,UAAC,KAAD,CAEEe,MAAO,CAAEC,KAAMX,GACfY,GAAE,kBAAaJ,GAHjB,WAKE,gBACEK,IAAG,UACDN,EAlBQ,mCAmBcA,EAlBnB,8CAqBLO,IAAKL,KAGP,SAACZ,EAAD,UAAQY,MAbHD,IAFKA,EADJ,KAsBjB,C,uICpCYO,E,OAAOnB,GAAAA,KAAH,+E,SCmDjB,EA/Ce,WAAO,IAAD,EACnB,GAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMtB,GAAWC,EAAAA,EAAAA,MACXsB,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAC/CC,EAAAA,EAAAA,YAAU,WAGHF,IAGLG,EAAAA,EAAAA,IAAaH,GAAWI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9BX,EAAUW,EACX,GACF,GAAE,CAACL,IAaJ,OACE,6BAEE,UAACR,EAAD,CAAML,MAAO,CAAEC,KAAMX,GAAY6B,SAVhB,SAAAC,GACnBA,EAAEC,iBACFT,EAA0B,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAC5CD,EAAU,IACVE,EAAS,GACV,EAKG,WACE,kBACEa,KAAK,OACLC,KAAK,WACLC,MAAOhB,EACPiB,SAAU,SAAAL,GAAC,OAnBC,SAAAZ,GAClBC,EAASD,EACV,CAiBsBkB,CAAYN,EAAEO,OAAOH,MAAzB,KAEb,mBAAQF,KAAK,SAAb,wBAEF,SAAClC,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Wraper = styled.div`\nwidth: 250px;\ntransition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover{\n    transform: scale(1.035);\n      box-shadow: 2px 2px 3px 3px rgb(255 107 8 / 50%);\n      \n}\n`;\n\nexport const Title = styled.h3`\n    padding: 5px;\n`","import { Link, useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nimport {Wraper, Title} from './MovieList.styled'\n\n\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w300/';\nconst FAKE_PHOTO = 'https://screench.com/upload/no-poster.jpeg';\n\nexport const MovieList = ({ movies }) => {\n  // console.log(movies);\n  const location = useLocation();\n\n  return (\n    <Box display=\"flex\" gridGap={5} flexWrap=\"wrap\">\n      {movies.map(({poster_path, id, title}) => (\n        <Wraper  key={id}>\n          <Link\n            key={id}\n            state={{ from: location }}\n            to={`/movies/${id}`}\n          >\n            <img\n              src={`${\n                poster_path\n                  ? BASE_POSTER_URL + poster_path\n                  : FAKE_PHOTO\n              }`}\n              alt={title}\n            />\n\n            <Title>{title}</Title>\n          </Link>\n        </Wraper>\n      ))}\n    </Box>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      poster_path:PropTypes.string,\n      overview:PropTypes.string\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 16px;\n  margin-bottom:16px;\n`;\n","// import { SearchBox } from 'components/Searchbox/Searchbox';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { searchMovies } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { Form } from 'pages/Movies/Movies.styled';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  const MovieName = searchParams.get('query') ?? '';\n  useEffect(() => {\n    \n    // console.log(queri);\n    if (!MovieName) {\n      return;\n    }\n    searchMovies(MovieName).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [MovieName]);\n\n  const handleInput = query => {\n    setQuery(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n    setMovies([]);\n    setQuery('');\n  };\n\n  return (\n    <main>\n      {/* <SearchBox value={MovieName} onChange={updateQueryString} /> */}\n      <Form state={{ from: location }} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={query}\n          onChange={e => handleInput(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Wraper","styled","Title","MovieList","movies","location","useLocation","Box","display","gridGap","flexWrap","map","poster_path","id","title","state","from","to","src","alt","Form","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","MovieName","get","useEffect","searchMovies","then","results","onSubmit","e","preventDefault","type","name","value","onChange","handleInput","target"],"sourceRoot":""}