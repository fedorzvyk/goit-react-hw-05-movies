{"version":3,"file":"static/js/691.2c4ba6a1.chunk.js","mappings":"6MAMaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,CAAKC,QAAQ,OAAOC,QAAS,EAAGC,SAAS,OAAzC,SACGL,EAAOM,KAAI,SAAAC,GAAK,OACf,SAAC,IAAD,CAAKC,MAAM,QAAX,UACE,UAAC,KAAD,CAEEC,MAAO,CAAEC,KAAMT,GACfU,GAAE,kBAAaJ,EAAMK,IAHvB,WAKE,gBACEC,IAAG,UACDN,EAAMO,YAlBE,mCAmBcP,EAAMO,YAlBzB,8CAqBLC,IAAKR,EAAMS,SAGb,wBAAKT,EAAMS,UAbNT,EAAMK,KAFSL,EAAMK,GADf,KAsBtB,C,uIChCYK,E,OAAOC,GAAAA,KAAH,+E,SCmDjB,EA/Ce,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMxB,GAAWC,EAAAA,EAAAA,OAEjBwB,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAS,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAE1CD,IAGLE,EAAAA,EAAAA,IAAaF,GAAWG,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC9BX,EAAUW,EACX,GACF,GAAE,CAACP,IAaJ,OACE,6BAEE,UAACP,EAAD,CAAMR,MAAO,CAAEC,KAAMT,GAAY+B,SAVhB,SAAAC,GACnBA,EAAEC,iBACFT,EAA0B,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAC5CD,EAAU,IACVE,EAAS,GACV,EAKG,WACE,kBACEa,KAAK,OACLC,KAAK,WACLC,MAAOhB,EACPiB,SAAU,SAAAL,GAAC,OAnBC,SAAAZ,GAClBC,EAASD,EACV,CAiBsBkB,CAAYN,EAAEO,OAAOH,MAAzB,KAEb,mBAAQF,KAAK,SAAb,wBAEF,SAACpC,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C","sources":["components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { Box } from 'components/Box';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w300/';\nconst FAKE_PHOTO = 'https://screench.com/upload/no-poster.jpeg';\n\nexport const MovieList = ({ movies }) => {\n  // console.log(movies);\n  const location = useLocation();\n\n  return (\n    <Box display=\"flex\" gridGap={5} flexWrap=\"wrap\">\n      {movies.map(movie => (\n        <Box width=\"250px\" key={movie.id}>\n          <Link\n            key={movie.id}\n            state={{ from: location }}\n            to={`/movies/${movie.id}`}\n          >\n            <img\n              src={`${\n                movie.poster_path\n                  ? BASE_POSTER_URL + movie.poster_path\n                  : FAKE_PHOTO\n              }`}\n              alt={movie.title}\n            />\n\n            <h3>{movie.title}</h3>\n          </Link>\n        </Box>\n      ))}\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 16px;\n  margin-bottom:16px;\n`;\n","// import { SearchBox } from 'components/Searchbox/Searchbox';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { searchMovies } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { Form } from 'pages/Movies/Movies.styled';\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const MovieName = searchParams.get('query') ?? '';\n    // console.log(queri);\n    if (!MovieName) {\n      return;\n    }\n    searchMovies(MovieName).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [searchParams]);\n\n  const handleInput = query => {\n    setQuery(query);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n    setMovies([]);\n    setQuery('');\n  };\n\n  return (\n    <main>\n      {/* <SearchBox value={MovieName} onChange={updateQueryString} /> */}\n      <Form state={{ from: location }} onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"username\"\n          value={query}\n          onChange={e => handleInput(e.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </Form>\n      <MovieList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieList","movies","location","useLocation","display","gridGap","flexWrap","map","movie","width","state","from","to","id","src","poster_path","alt","title","Form","styled","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","MovieName","get","searchMovies","then","results","onSubmit","e","preventDefault","type","name","value","onChange","handleInput","target"],"sourceRoot":""}